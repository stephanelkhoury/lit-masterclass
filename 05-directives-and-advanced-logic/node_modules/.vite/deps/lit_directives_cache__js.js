import {
  clearPart,
  getCommittedValue,
  insertPart,
  isCompiledTemplateResult,
  isTemplateResult,
  setCommittedValue
} from "./chunk-COG5WIC3.js";
import {
  nothing,
  render
} from "./chunk-ZM44JEQ2.js";
import {
  Directive,
  directive
} from "./chunk-CAE7NQQ3.js";

// node_modules/lit-html/development/directives/cache.js
var getStringsFromTemplateResult = (result) => isCompiledTemplateResult(result) ? result["_$litType$"].h : result.strings;
var CacheDirective = class extends Directive {
  constructor(partInfo) {
    super(partInfo);
    this._templateCache = /* @__PURE__ */ new WeakMap();
  }
  render(v) {
    return [v];
  }
  update(containerPart, [v]) {
    const _valueKey = isTemplateResult(this._value) ? getStringsFromTemplateResult(this._value) : null;
    const vKey = isTemplateResult(v) ? getStringsFromTemplateResult(v) : null;
    if (_valueKey !== null && (vKey === null || _valueKey !== vKey)) {
      const partValue = getCommittedValue(containerPart);
      const childPart = partValue.pop();
      let cachedContainerPart = this._templateCache.get(_valueKey);
      if (cachedContainerPart === void 0) {
        const fragment = document.createDocumentFragment();
        cachedContainerPart = render(nothing, fragment);
        cachedContainerPart.setConnected(false);
        this._templateCache.set(_valueKey, cachedContainerPart);
      }
      setCommittedValue(cachedContainerPart, [childPart]);
      insertPart(cachedContainerPart, void 0, childPart);
    }
    if (vKey !== null) {
      if (_valueKey === null || _valueKey !== vKey) {
        const cachedContainerPart = this._templateCache.get(vKey);
        if (cachedContainerPart !== void 0) {
          const partValue = getCommittedValue(cachedContainerPart);
          const cachedPart = partValue.pop();
          clearPart(containerPart);
          insertPart(containerPart, void 0, cachedPart);
          setCommittedValue(containerPart, [cachedPart]);
        }
      }
      this._value = v;
    } else {
      this._value = void 0;
    }
    return this.render(v);
  }
};
var cache = directive(CacheDirective);
export {
  cache
};
/*! Bundled license information:

lit-html/development/directives/cache.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)
*/
//# sourceMappingURL=lit_directives_cache__js.js.map
